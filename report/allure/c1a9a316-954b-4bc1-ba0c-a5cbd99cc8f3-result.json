{"name": "test_orderCreate_open[14-2-0.1238635777]", "status": "broken", "statusDetails": {"message": "ValueError: check_hostname requires server_hostname", "trace": "contractId = '14', price = '0.1238635777', volume = '2'\n\n    @pytest.mark.normal\n    @pytest.mark.parametrize(\"contractId,volume,price\",[[\"47\",\"2\",\"23.791\",],[\"14\",\"2\",\"0.1238635777\"]])\n    def test_orderCreate_open(contractId,price,volume):\n        print(volume)\n        orderCreateUrl = base_url + '/fe-co-api/order/order_create'\n    \n        data = json.dumps({\"desc\": \"DOGEUSDT限价卖出开空\",\"contractId\":contractId,\"positionType\":2,\"side\":\"SELL\",\"leverageLevel\":22,\"price\":price,\"volume\":volume,\n                           \"triggerPrice\":\"null\",\"open\":\"OPEN\",\"type\":1,\"isConditionOrder\":\"false\",\"uaTime\":\"2022-04-25 09:19:13\",\n                           \"securityInfo\":\"{\\\"id\\\":\\\"\\\",\\\"org\\\":\\\"futures.coin-up.pro\\\",\\\"timestamp\\\":\\\"2022-04-25 09:19:13\\\",\\\"userAgent\\\":\\\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\\\",\\\"availableScreenResolution\\\":\\\"1707;1027\\\",\\\"screenResolution\\\":\\\"1707;1067\\\",\\\"touchSupport\\\":\\\"0;false;false\\\",\\\"sessionStorage\\\":1,\\\"localStorage\\\":1,\\\"indexedDb\\\":1,\\\"plugins\\\":\\\"PDF Viewer::Portable Document Format::application/pdf~pdf,text/pdf~pdf,Chrome PDF Viewer::Portable Document Format::application/pdf~pdf,text/pdf~pdf,Chromium PDF Viewer::Portable Document Format::application/pdf~pdf,text/pdf~pdf,Microsoft Edge PDF Viewer::Portable Document Format::application/pdf~pdf,text/pdf~pdf,WebKit built-in PDF::Portable Document Format::application/pdf~pdf,text/pdf~pdf\\\",\\\"fonts\\\":\\\"Arial;Arial Black;Arial Narrow;Book Antiqua;Bookman Old Style;Calibri;Cambria;Cambria Math;Century;Century Gothic;Century Schoolbook;Comic Sans MS;Consolas;Courier;Courier New;Georgia;Helvetica;Impact;Lucida Bright;Lucida Calligraphy;Lucida Console;Lucida Fax;Lucida Handwriting;Lucida Sans;Lucida Sans Typewriter;Lucida Sans Unicode;Microsoft Sans Serif;Monotype Corsiva;MS Gothic;MS PGothic;MS Reference Sans Serif;MS Sans Serif;MS Serif;Palatino Linotype;Segoe Print;Segoe Script;Segoe UI;Segoe UI Light;Segoe UI Semibold;Segoe UI Symbol;Tahoma;Times;Times New Roman;Trebuchet MS;Verdana;Wingdings;Wingdings 2;Wingdings 3\\\",\\\"client_type\\\":\\\"\\\",\\\"identity\\\":\\\"\\\",\\\"device\\\":\\\"d46c0e699f229dc6539b06da6333973d\\\",\\\"ip\\\":\\\"\\\",\\\"ip2region\\\":\\\"\\\",\\\"language\\\":\\\"zh-CN\\\",\\\"platform\\\":\\\"Win32\\\",\\\"browser\\\":\\\"\\\",\\\"browser_version\\\":\\\"\\\",\\\"os\\\":\\\"\\\",\\\"os_version\\\":\\\"\\\",\\\"resolution\\\":\\\"\\\",\\\"timezone\\\":\\\"Asia/Shanghai\\\",\\\"ctime\\\":\\\"\\\",\\\"mtime\\\":\\\"\\\"}\"})\n    \n    \n    \n>       response = requests.post(url=orderCreateUrl, headers=headres,data=data)\n\nscirpt\\test_orderCreate_params.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne:\\python\\lib\\site-packages\\requests\\api.py:117: in post\n    return request('post', url, data=data, json=json, **kwargs)\ne:\\python\\lib\\site-packages\\requests\\api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\ne:\\python\\lib\\site-packages\\requests\\sessions.py:542: in request\n    resp = self.send(prep, **send_kwargs)\ne:\\python\\lib\\site-packages\\requests\\sessions.py:655: in send\n    r = adapter.send(request, **kwargs)\ne:\\python\\lib\\site-packages\\requests\\adapters.py:439: in send\n    resp = conn.urlopen(\ne:\\python\\lib\\site-packages\\urllib3\\connectionpool.py:696: in urlopen\n    self._prepare_proxy(conn)\ne:\\python\\lib\\site-packages\\urllib3\\connectionpool.py:964: in _prepare_proxy\n    conn.connect()\ne:\\python\\lib\\site-packages\\urllib3\\connection.py:359: in connect\n    conn = self._connect_tls_proxy(hostname, conn)\ne:\\python\\lib\\site-packages\\urllib3\\connection.py:500: in _connect_tls_proxy\n    return ssl_wrap_socket(\ne:\\python\\lib\\site-packages\\urllib3\\util\\ssl_.py:453: in ssl_wrap_socket\n    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls)\ne:\\python\\lib\\site-packages\\urllib3\\util\\ssl_.py:495: in _ssl_wrap_socket_impl\n    return ssl_context.wrap_socket(sock)\ne:\\python\\lib\\ssl.py:500: in wrap_socket\n    return self.sslsocket_class._create(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'ssl.SSLSocket'>\nsock = <socket.socket fd=868, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 56794), raddr=('127.0.0.1', 7890)>\nserver_side = False, do_handshake_on_connect = True, suppress_ragged_eofs = True, server_hostname = None\ncontext = <ssl.SSLContext object at 0x00000266BC23F940>, session = None\n\n    @classmethod\n    def _create(cls, sock, server_side=False, do_handshake_on_connect=True,\n                suppress_ragged_eofs=True, server_hostname=None,\n                context=None, session=None):\n        if sock.getsockopt(SOL_SOCKET, SO_TYPE) != SOCK_STREAM:\n            raise NotImplementedError(\"only stream sockets are supported\")\n        if server_side:\n            if server_hostname:\n                raise ValueError(\"server_hostname can only be specified \"\n                                 \"in client mode\")\n            if session is not None:\n                raise ValueError(\"session can only be specified in \"\n                                 \"client mode\")\n        if context.check_hostname and not server_hostname:\n>           raise ValueError(\"check_hostname requires server_hostname\")\nE           ValueError: check_hostname requires server_hostname\n\ne:\\python\\lib\\ssl.py:997: ValueError"}, "parameters": [{"name": "contractId", "value": "'14'"}, {"name": "volume", "value": "'2'"}, {"name": "price", "value": "'0.1238635777'"}], "start": 1650952740334, "stop": 1650952740344, "uuid": "9f880f2b-646f-4c14-b163-dbe1083dc7a0", "historyId": "aa48a5f571fb31a4abad616169fa647e", "testCaseId": "528c0e54cbd8ce38db43348b6efbc63a", "fullName": "scirpt.test_orderCreate_params#test_orderCreate_open", "labels": [{"name": "tag", "value": "normal"}, {"name": "parentSuite", "value": "scirpt"}, {"name": "suite", "value": "test_orderCreate_params"}, {"name": "host", "value": "LAPTOP-IHTMI6EI"}, {"name": "thread", "value": "3416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scirpt.test_orderCreate_params"}]}